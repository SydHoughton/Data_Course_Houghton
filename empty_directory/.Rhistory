# install.packages("dplyr")
library(dplyr) # install this package if you haven't already
setwd("empty_directory/")
setwd("/Users/sydneyhoughton/Desktop/Data_Course/data/empty_directory/")
getwd()
# define fake objects
dfs = c("df1","df2","df3","df4","df5","df6","df7","df8","df9","df10")
# assign patterned random data to objects
for(i in dfs){
assign(i, #df1, ... to > /cn
data.frame(Col1 = 1:100, #create data frame with following col characteristics /cn
Col2 = abs(rnorm(100)), #absolute value of random values distribution /cn
Col3 = rbinom(100, size = 100, prob = sample(c(.25,.5,.75),1))), #random binomial /cn
envir = .GlobalEnv) # where to put it /cn
} # should created 10 new dataframes /cn
?rm
View(df1)
rm(dfs, df) #cleanup
rm(list = ls()) # removes all files, same as clearing workspace /cn
# write fake csv files
for(i in objects(pattern = "df")){ #objects will list all objects in current environment, will list objects with "df" /cn
write.csv(get(i), file = paste0(i,".csv")) #write csv file, get object names, file paste(same as c, 0 means no space in between) /cn
}
list.files() # check to see that they showed up in our new directory
rm(list = ls(pattern = "df"))
rm(i)
list.files(pattern = ".csv") # make sure R can see the files you want (and nothing more)
# set counter and empty vectors
mean_values = c()
names = c()
x=1
for(i in list.files(parttern = ".csv"))
df = read.csv(i)
df = read.csv(i) #read csv files /cn
for(i in list.files(pattern = ".csv")){ #list csv files /cn
df = read.csv(i)
df = read.csv(i) #read csv files /cn
names[x] = i #x=1
mean_values[x] = mean(df[,3]) #mean of 3rd column
x=x+1
}
data.frame(FILE = names, Mean_Col3 = mean_values)
?group_by
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant")
setwd("/Users/sydneyhoughton/Desktop/Data_Course/data/")
list.files()
dat = read.csv("thatch_ant.csv")
names(dat)
#why are these plots different???
plot(x=dat$Headwidth..mm., y=dat$Mass)
plot(x=dat$Size.class, y=dat$Mass)
#check the classes of these vectors
class(dat$Headwidth..mm.)
class(dat$Size.class)
# Check all classes (for each column in dat)
str(dat)
# Two of them are "Factor" ....why is the column "Headwidth" a factor? It looks numeric!
levels(dat$Headwidth)
#make a numeric vector to play with:
nums = c(1,1,2,2,2,2,3,3,3,4,4,4,4,4,4,4,5,6,7,8,9)
class(nums) # make sure it's numeric
# convert to a factor
as.factor(nums) # show in console
nums_factor = as.factor(nums) #assign it to a new object as a factor
class(nums_factor) # check it
#check it out
plot(nums)
plot(nums_factor)
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant")
# find me the row and column
# CONVERT THOSE TO "41.000"
dat$Headwidth = as.numeric(dat$Headwidth)
class(dat$Headwidth)
plot(dat$Headwidth, dat$Mass)
which(dat$Headwidth == "NA")
summary(dat$Headwidth)
bad = which(dat$Headwidth == 1)
dat$Headwidth[bad] = NA
# NOW, REMOVE ALL THE ROWS OF "dat" THAT HAVE AN "NA" VALUE
dat2 = na.omit(dat)
dev.off()
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant")
color[]
colours()
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony")
View(dat)
?col
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col(1,2,3))
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony")
cl <- colors()
cl[1:11]
colony <- cl[dat$Colony]
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", cl <- colors()
cl[1:11]
colony <- cl[dat$Colony])
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 3)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 6)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 8)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 2)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 10)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 115)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15)
colony
cl["blue4","burlywood2","honeydew","khaki","maroon2","orange1","peachpuff1","sienna","tomato1","yellow3","mediumaquamarine"]
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- colors()
cl["blue4","burlywood2","honeydew","khaki","maroon2","orange1","peachpuff1","sienna","tomato1","yellow3","mediumaquamarine"]
cl[,c("blue4","burlywood2","honeydew","khaki","maroon2","orange1","peachpuff1","sienna","tomato1","yellow3","mediumaquamarine")]
cl("blue4","burlywood2","honeydew","khaki","maroon2","orange1","peachpuff1","sienna","tomato1","yellow3","mediumaquamarine")
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- colors("blue4","burlywood2","honeydew","khaki","maroon2","orange1","peachpuff1","sienna","tomato1","yellow3","mediumaquamarine")
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- colors()
cl[2:12]
colony <- cl[dat$Colony])
colony
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15)
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- colors()
cl[20:21]
colony <- cl[dat$Colony])
colony
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15)
cl[1:11]
colony <- cl[dat$Colony])
colony
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15)
ggplot2(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony")
?ggplot
install.packages("RColorBrewer")
library("BH", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:BH", unload=TRUE)
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
display.brewer.all()
?RColorBrewer
display.brewer.all()
?RColorBrewer
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- colors()
display.brewer.all()
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
cl <- brewer.pal(n = 11, name = "Paired")
colony <- cl[dat$Colony]
colony
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15)
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col =
"color")
par(bg = "thistle")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth", ylab="Mass", main="Thatch Ant by Colony", col = colony, pch = 15,
par(bg = "thistle")
boxplot(x)
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col =
"grey"))
par(bg="gray")
par(bg='gray')
?par()
plot(dat$Headwidth, dat$Mass, xlab="Headwidth(units)", ylab="Mass(units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
plot(dat$Headwidth, dat$Mass, xlab="Headwidth (units)", ylab="Mass (units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
jpeg(filename = "/Users/sydneyhoughton/Desktop/image.jpeg")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth (units)", ylab="Mass (units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
jpeg(filename = "/Users/sydneyhoughton/Desktop/image.jpeg")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth (units)", ylab="Mass (units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
dev.off
jpeg(filename = "/Users/sydneyhoughton/Desktop/image.jpeg")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth (units)", ylab="Mass (units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
dev.off
jpeg(filename = "/Users/sydneyhoughton/Desktop/image.jpeg")
plot(dat$Headwidth, dat$Mass, xlab="Headwidth (units)", ylab="Mass (units)", main="Thatch Ant Headwith vs Mass", col = colony, pch = 15)
dev.off()
# 3.  Subset the thatch ant data set to only include ants from colony 1 and colony 2
datsubset = subset(dat, Colony == 1 | Colony == 2)
View(datsubset)
# 4.  Write code to save this new subset as a .csv file
write.csv(datsubset, "/Users/sydneyhoughton/Desktop/Data_Course_Houghton/data_subset.csv")
################# Make csv files to test function on ################
setwd("/Users/sydneyhoughton/Desktop/Data_Course_Houghton/")
if(dir.exists("empty_directory") == FALSE){ ##Looks in working directory (False = if NOT there) /cn
dir.create("empty_directory") # this will make a new directory in your file system named "empty_directory"
}
setwd("empty_directory/")
getwd()
# define fake objects
dfs = c("df1","df2","df3","df4","df5","df6","df7","df8","df9","df10")
# assign patterned random data to objects
for(i in dfs){
assign(i, #df1, ... to > /cn
data.frame(Col1 = 1:100, #create data frame with following col characteristics /cn
Col2 = abs(rnorm(100)), #absolute value of random values distribution /cn
Col3 = rbinom(100, size = 100, prob = sample(c(.25,.5,.75),1))), #random binomial /cn
envir = .GlobalEnv) # where to put it /cn
} # should created 10 new dataframes /cn
View(df1)
rm(dfs, df) #cleanup
rm(list = ls()) # removes all files, same as clearing workspace /cn
# assign patterned random data to objects
for(i in dfs){
assign(i, #df1, ... to > /cn
data.frame(Col1 = 1:100, #create data frame with following col characteristics /cn
Col2 = abs(rnorm(100)), #absolute value of random values distribution /cn
Col3 = rbinom(100, size = 100, prob = sample(c(.25,.5,.75),1))), #random binomial /cn
envir = .GlobalEnv) # where to put it /cn
} # should created 10 new dataframes /cn
# define fake objects
dfs = c("df1","df2","df3","df4","df5","df6","df7","df8","df9","df10")
# assign patterned random data to objects
for(i in dfs){
assign(i, #df1, ... to > /cn
data.frame(Col1 = 1:100, #create data frame with following col characteristics /cn
Col2 = abs(rnorm(100)), #absolute value of random values distribution /cn
Col3 = rbinom(100, size = 100, prob = sample(c(.25,.5,.75),1))), #random binomial /cn
envir = .GlobalEnv) # where to put it /cn
} # should created 10 new dataframes /cn
rm(dfs, df) #cleanup
rm(list = ls()) # removes all files, same as clearing workspace /cn
# write fake csv files
for(i in objects(pattern = "df")){ #objects will list all objects in current environment, will list objects with "df" /cn
write.csv(get(i), file = paste0(i,".csv")) #write csv file, get object names, file paste(same as c, 0 means no space in between) /cn
}
list.files() # check to see that they showed up in our new directory
# define fake objects
dfs = c("df1","df2","df3","df4","df5","df6","df7","df8","df9","df10")
# assign patterned random data to objects
for(i in dfs){
assign(i, #df1, ... to > /cn
data.frame(Col1 = 1:100, #create data frame with following col characteristics /cn
Col2 = abs(rnorm(100)), #absolute value of random values distribution /cn
Col3 = rbinom(100, size = 100, prob = sample(c(.25,.5,.75),1))), #random binomial /cn
envir = .GlobalEnv) # where to put it /cn
} # should created 10 new dataframes /cn
# write fake csv files
for(i in objects(pattern = "df")){ #objects will list all objects in current environment, will list objects with "df" /cn
write.csv(get(i), file = paste0(i,".csv")) #write csv file, get object names, file paste(same as c, 0 means no space in between) /cn
}
list.files() # check to see that they showed up in our new directory
rm(list = ls(pattern = "df"))
rm(i)
# set counter and empty vectors
mean_values = c()
names = c()
x=1
list.files(pattern = ".csv") # make sure R can see the files you want (and nothing more)
for(i in list.files(pattern = ".csv")){ #list csv files /cn
df = read.csv(i) #read csv files /cn
names[x] = i #x=1
mean_values[x] = mean(df[,3]) #mean of 3rd column
x=x+1
}
View(df)
data.frame(FILE = names, Mean_Col3 = mean_values)
for(i in list.files(pattern = ".csv")){ #list csv files /cn
df = read.csv(i) #read csv files /cn
names[FILE] = i #x=1
mean_values[Mean_Col3] = mean(df[,3]) #mean of 3rd column
x=x+1
}
View(df)
